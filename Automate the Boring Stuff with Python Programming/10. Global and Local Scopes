#Local and Global Scope

#Parameters and variables that are assigned in a called function are said to exist in that function’s local scope.
#Variables that are assigned outside all functions are said to exist in the global scope.

#Scopes matter for several reasons:
    #Code in the global scope cannot use any local variables.

    #However, a local scope can access global variables.

    #Code in a function’s local scope cannot use variables in any other local scope.

    #You can use the same name for different variables if they are in different scopes. That is, there can be a local variable named spam and a global variable also named spam.

#Local Variables Cannot Be Used in the Global Scope

def spam():
    eggs = 31337
spam()
print(eggs)
####################################################################################

#Local Scopes Cannot Use Variables in Other Local Scopes

def spam():
    eggs = 99
    bacon()
    print(eggs)

def bacon():
      ham = 101
      eggs = 0

spam()

 ####################################################################################

#Global Variables Can Be Read from a Local Scope

def spam():
    print(eggs)
eggs = 42
spam()
print(eggs)

 ####################################################################################

#Local and Global Variables with the Same Name

def spam():
       eggs = 'spam local'
       print(eggs) # prints 'spam local'
   def bacon():

       eggs = 'bacon local'
       print(eggs) # prints 'bacon local'
       spam()
       print(eggs) # prints 'bacon local'

 eggs = 'global'
   bacon()
   print(eggs) # prints 'global'

 ####################################################################################
  #The global Statement

  #If you need to modify a global variable from within a function, use the global statement.

  def spam():
    global eggs
    eggs = 'spam'

 eggs = 'global'
 spam()
 print(eggs)
####################################################################################

def spam():
   global eggs
  eggs = 'spam' # this is the global

def bacon():
  eggs = 'bacon' # this is a local
def ham():
  print(eggs) # this is the global

eggs = 42 # this is the global
spam()
print(eggs)

####################################################################################

def spam():
      print(eggs) # ERROR!
      eggs = 'spam local'

 eggs = 'global'
   spam()

########################################################################

# A scope can be thought of as an area of the source code, and as a container of variables.
# The Global Scope is code outside of all functions. Variables assigned here are globals variables.
# Each functions code is in its own local scope. Variables assigned here are global Variables
# Code in the global scope cannot use anny local variables.
# Code in a functions local scope cannot use variables in any other functions local scope
# if there is an assignment statement for a variable in a function, that is a local variables
