
# Functions

def hello():
    print('Howdy!')
    print('Howdy!!!')
    print('Hello there.')
hello()
hello()
hello()
###################################################################

#def Statements with Parameters

#When you call the print() or len() function, you pass in values, called arguments in this context, by typing them between the parentheses.

def hello(name):
     print('Hello ' + name)

hello('Alice')
hello('Bob')
###################################################################

#Return Values and return Statements

#When you call the len() function and pass it an argument such as 'Hello',
#the function call evaluates to the integer value 5, which is the length of the string you passed it.

import random
def getAnswer(answerNumber):
      if answerNumber == 1:
           return 'It is certain'
       elif answerNumber == 2:
           return 'It is decidedly so'
       elif answerNumber == 3:
           return 'Yes'
       elif answerNumber == 4:
           return 'Reply hazy try again'
       elif answerNumber == 5:
           return 'Ask again later'
       elif answerNumber == 6:
           return 'Concentrate and ask again'
       elif answerNumber == 7:
           return 'My reply is no'
       elif answerNumber == 8:
           return 'Outlook not so good'
       elif answerNumber == 9:
           return 'Very doubtful'

r = random.randint(1, 9)
fortune = getAnswer(r)
print(fortune)
###################################################################

#The None Value

#In Python there is a value called None, which represents the absence of a value. None is the only value of the NoneType data type.

#Keyword Arguments and print()

#Most arguments are identified by their position in the function call. For example, random.randint(1, 10) is different from random.randint(10, 1).

print('Hello')
print('World')

############################################3

print('Hello', end='')
print('World')
#################################################

print('cats', 'dogs', 'mice', sep=',')
#################################################

# Functions are like a mini program inside your Program
#the main point of functions is to get rid of duplicate code
#the def statement defines a functions
#The input to functions are arguments.
      #The output is the return values
#The parameters are the variables in between the functions parentheses in the def statement.
#the return value is specific using the return Statements
#Every function has a return value. If your return function doesnt have a return statement the default is NONE values
#Keyword arguments to functions are usually for optional arguments. the print() function has keyword arguments end ans sep
